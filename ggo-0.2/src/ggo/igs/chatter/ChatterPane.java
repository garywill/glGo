/*
 * ChatterPane.java
 *
 *  gGo
 *  Copyright (C) 2002  Peter Strempel <pstrempel@t-online.de>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
package ggo.igs.chatter;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import ggo.*;
import ggo.utils.*;
import ggo.igs.*;

/**
 * Main GUI frame for the chatter system. This frame embeds the
 * ChatterInternalFrames for each chat inside a JDesktopPane.
 *
 * @author  Peter Strempel
 * @version $Revision: 1.10 $, $Date: 2002/10/27 09:20:13 $
 */
public class ChatterPane extends JFrame {
    private ChatHandler chatHandler;
    private boolean playSound;
    private int fontSize;

    /** Creates new form ChatterPane */
    public ChatterPane(ChatHandler chatHandler) {
        this.chatHandler = chatHandler;
        initComponents();

        playSound = gGo.getSettings().getPlayChatSound();
        soundToggleButton.setSelected(playSound);
        playSoundMenuItem.setSelected(playSound);
        toolBar.setVisible(gGo.getSettings().getIGSChatterShowToolbar());

        fontSize = gGo.getSettings().getSerifFontSize();
        switch (fontSize) {
            case 8:
                fontSize8Item.setSelected(true);
                break;
            case 10:
                fontSize10Item.setSelected(true);
                break;
            case 12:
                fontSize12Item.setSelected(true);
                break;
            case 14:
                fontSize14Item.setSelected(true);
                break;
            case 16:
                fontSize16Item.setSelected(true);
                break;
        }

        // Restore location
        Point p = gGo.getSettings().getStoredLocation(chatHandler.getClass().getName());
        if (p != null)
            setLocation(p);

        // Create an icon for the appliction
        Image icon = ImageHandler.loadImage("32emerald.png");
        try {
            setIconImage(icon);
        } catch (NullPointerException e) {
            System.err.println("Failed to load icon image.");
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        javax.swing.JMenuBar menuBar;
        javax.swing.JButton newButton;
        javax.swing.JMenu fontSizeMenu;
        javax.swing.JButton observeButton;
        javax.swing.JButton userInfoButton;
        javax.swing.JMenu viewMenu;
        javax.swing.JMenu controlMenu;
        javax.swing.JButton matchButton;
        javax.swing.JButton focusMainWindowButton;
        javax.swing.JMenuItem newChatMenuItem;
        javax.swing.JButton automatchButton;

        fontSizeButtonGroup = new javax.swing.ButtonGroup();
        toolBar = new javax.swing.JToolBar();
        focusMainWindowButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        soundToggleButton = new javax.swing.JToggleButton();
        userInfoButton = new javax.swing.JButton();
        observeButton = new javax.swing.JButton();
        matchButton = new javax.swing.JButton();
        automatchButton = new javax.swing.JButton();
        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        controlMenu = new javax.swing.JMenu();
        newChatMenuItem = new javax.swing.JMenuItem();
        closeMenuItem = new javax.swing.JMenuItem();
        viewMenu = new javax.swing.JMenu();
        viewToolbar = new javax.swing.JCheckBoxMenuItem();
        playSoundMenuItem = new javax.swing.JCheckBoxMenuItem();
        fontSizeMenu = new javax.swing.JMenu();
        fontSize8Item = new javax.swing.JRadioButtonMenuItem();
        fontSize10Item = new javax.swing.JRadioButtonMenuItem();
        fontSize12Item = new javax.swing.JRadioButtonMenuItem();
        fontSize14Item = new javax.swing.JRadioButtonMenuItem();
        fontSize16Item = new javax.swing.JRadioButtonMenuItem();

        setTitle(chatHandler.getIGSPlayerResources().getString("Chats"));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeWindow(evt);
            }
        });

        focusMainWindowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Home24.png")));
        focusMainWindowButton.setToolTipText(chatHandler.getIGSPlayerResources().getString("focus_button_tooltip"));
        focusMainWindowButton.setBorderPainted(false);
        focusMainWindowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                focusMainWindowButtonActionPerformed(evt);
            }
        });

        toolBar.add(focusMainWindowButton);

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Stop24.gif")));
        closeButton.setToolTipText(chatHandler.getIGSPlayerResources().getString("close_window_tooltip"));
        closeButton.setBorderPainted(false);
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFrame(evt);
            }
        });

        toolBar.add(closeButton);

        toolBar.addSeparator();
        newButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Add24.gif")));
        newButton.setToolTipText(chatHandler.getIGSPlayerResources().getString("open_new_chat_tooltip"));
        newButton.setBorderPainted(false);
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createChat(evt);
            }
        });

        toolBar.add(newButton);

        soundToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Volume24.gif")));
        soundToggleButton.setToolTipText(chatHandler.getIGSPlayerResources().getString("toggle_sound_tooltip"));
        soundToggleButton.setBorderPainted(false);
        soundToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soundToggleButtonActionPerformed(evt);
            }
        });

        toolBar.add(soundToggleButton);

        toolBar.addSeparator();
        userInfoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Information24.gif")));
        userInfoButton.setToolTipText(chatHandler.getIGSPlayerResources().getString("user_info_tooltip"));
        userInfoButton.setBorderPainted(false);
        userInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userInfoButtonActionPerformed(evt);
            }
        });

        toolBar.add(userInfoButton);

        observeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Zoom24.gif")));
        observeButton.setToolTipText(chatHandler.getIGSPlayerResources().getString("observe_button_tooltip"));
        observeButton.setBorderPainted(false);
        observeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                observeButtonActionPerformed(evt);
            }
        });

        toolBar.add(observeButton);

        matchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blk_24.png")));
        matchButton.setToolTipText(chatHandler.getIGSPlayerResources().getString("match_button_tooltip"));
        matchButton.setBorderPainted(false);
        matchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matchButtonActionPerformed(evt);
            }
        });

        toolBar.add(matchButton);

        automatchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blk_auto_24.png")));
        automatchButton.setToolTipText(chatHandler.getIGSPlayerResources().getString("automatch_button_tooltip"));
        automatchButton.setBorderPainted(false);
        automatchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                automatchButtonActionPerformed(evt);
            }
        });

        toolBar.add(automatchButton);

        getContentPane().add(toolBar, java.awt.BorderLayout.NORTH);

        getContentPane().add(desktopPane, java.awt.BorderLayout.CENTER);

        controlMenu.setText(chatHandler.getIGSPlayerResources().getString("Control"));
        newChatMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newChatMenuItem.setText(chatHandler.getIGSPlayerResources().getString("New_Chat"));
        newChatMenuItem.setToolTipText(chatHandler.getIGSPlayerResources().getString("open_new_chat_tooltip"));
        newChatMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Add16.gif")));
        newChatMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createChat(evt);
            }
        });

        controlMenu.add(newChatMenuItem);
        closeMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        closeMenuItem.setText(chatHandler.getIGSPlayerResources().getString("Close"));
        closeMenuItem.setToolTipText(chatHandler.getIGSPlayerResources().getString("close_window_tooltip"));
        closeMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Stop16.gif")));
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFrame(evt);
            }
        });

        controlMenu.add(closeMenuItem);
        menuBar.add(controlMenu);
        viewMenu.setText(chatHandler.getIGSPlayerResources().getString("View"));
        viewToolbar.setSelected(gGo.getSettings().getIGSChatterShowToolbar());
        viewToolbar.setText(chatHandler.getIGSPlayerResources().getString("View_toolbar"));
        viewToolbar.setToolTipText(chatHandler.getIGSPlayerResources().getString("view_toolbar_tooltip"));
        viewToolbar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewToolbarActionPerformed(evt);
            }
        });

        viewMenu.add(viewToolbar);
        playSoundMenuItem.setText(chatHandler.getIGSPlayerResources().getString("Sound"));
        playSoundMenuItem.setToolTipText(chatHandler.getIGSPlayerResources().getString("toggle_sound_tooltip"));
        playSoundMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playSoundMenuItemActionPerformed(evt);
            }
        });

        viewMenu.add(playSoundMenuItem);
        fontSizeMenu.setText(chatHandler.getIGSPlayerResources().getString("Font_size"));
        fontSizeMenu.setToolTipText(chatHandler.getIGSPlayerResources().getString("font_size_tooltip"));
        fontSize8Item.setText("8");
        fontSizeButtonGroup.add(fontSize8Item);
        fontSize8Item.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fontSizeSelected(evt);
            }
        });

        fontSizeMenu.add(fontSize8Item);
        fontSize10Item.setText("10");
        fontSizeButtonGroup.add(fontSize10Item);
        fontSize10Item.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fontSizeSelected(evt);
            }
        });

        fontSizeMenu.add(fontSize10Item);
        fontSize12Item.setText("12");
        fontSizeButtonGroup.add(fontSize12Item);
        fontSize12Item.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fontSizeSelected(evt);
            }
        });

        fontSizeMenu.add(fontSize12Item);
        fontSize14Item.setText("14");
        fontSizeButtonGroup.add(fontSize14Item);
        fontSize14Item.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fontSizeSelected(evt);
            }
        });

        fontSizeMenu.add(fontSize14Item);
        fontSize16Item.setText("16");
        fontSizeButtonGroup.add(fontSize16Item);
        fontSize16Item.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fontSizeSelected(evt);
            }
        });

        fontSizeMenu.add(fontSize16Item);
        viewMenu.add(fontSizeMenu);
        menuBar.add(viewMenu);
        setJMenuBar(menuBar);

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setSize(new java.awt.Dimension(550, 450));
        setLocation((screenSize.width-550)/2,(screenSize.height-450)/2);
    }//GEN-END:initComponents

    private void automatchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_automatchButtonActionPerformed
        String target = null;
        try {
            target = ((ChatterInternalFrame)(desktopPane.getSelectedFrame())).getTarget();
        } catch (NullPointerException e) {}
        if (target != null && target.length() > 0)
            chatHandler.requestAutomatch(target);
    }//GEN-LAST:event_automatchButtonActionPerformed

    private void matchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matchButtonActionPerformed
        String target = null;
        try {
            target = ((ChatterInternalFrame)(desktopPane.getSelectedFrame())).getTarget();
        } catch (NullPointerException e) {}
        if (target != null && target.length() > 0)
            chatHandler.requestMatch(target);
    }//GEN-LAST:event_matchButtonActionPerformed

    private void observeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_observeButtonActionPerformed
        String target = null;
        try {
            target = ((ChatterInternalFrame)(desktopPane.getSelectedFrame())).getTarget();
        } catch (NullPointerException e) {}
        if (target != null && target.length() > 0)
            chatHandler.requestObserve(target);
    }//GEN-LAST:event_observeButtonActionPerformed

    private void playSoundMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playSoundMenuItemActionPerformed
        soundToggleButton.setSelected(playSoundMenuItem.isSelected());
        soundToggleButtonActionPerformed(null);
    }//GEN-LAST:event_playSoundMenuItemActionPerformed

    private void focusMainWindowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_focusMainWindowButtonActionPerformed
        try {
            IGSConnection.getMainWindow().checkVisible();
        } catch (NullPointerException e) {}
    }//GEN-LAST:event_focusMainWindowButtonActionPerformed

    private void viewToolbarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewToolbarActionPerformed
        toolBar.setVisible(viewToolbar.isSelected());
        gGo.getSettings().setIGSChatterShowToolbar(viewToolbar.isSelected());
        gGo.getSettings().saveSettings();
    }//GEN-LAST:event_viewToolbarActionPerformed

    private void fontSizeSelected(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fontSizeSelected
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            Object source = evt.getSource();

            if (source.equals(fontSize8Item))
                fontSize = 8;
            else if (source.equals(fontSize10Item))
                fontSize = 10;
            else if (source.equals(fontSize12Item))
                fontSize = 12;
            else if (source.equals(fontSize14Item))
                fontSize = 14;
            else if (source.equals(fontSize16Item))
                fontSize = 16;

            try {
                JInternalFrame[] frames = desktopPane.getAllFramesInLayer(JLayeredPane.DEFAULT_LAYER.intValue());
                for (int i=0, sz=frames.length; i<sz; i++) {
                    ((ChatterInternalFrame)frames[i]).setFontSize(fontSize);
                }
            } catch (ArrayIndexOutOfBoundsException e) {
                System.err.println("Failed to change font size: " + e);
            }
            gGo.getSettings().setSerifFontSize(fontSize);
            gGo.getSettings().saveSettings();
        }
    }//GEN-LAST:event_fontSizeSelected

    private void soundToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soundToggleButtonActionPerformed
        if (soundToggleButton.isSelected())
            playSound = true;
        else
            playSound = false;
        playSoundMenuItem.setSelected(playSound);
        gGo.getSettings().setPlayChatSound(playSound);
        gGo.getSettings().saveSettings();
    }//GEN-LAST:event_soundToggleButtonActionPerformed

    private void userInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userInfoButtonActionPerformed
        String target = null;
        try {
            target = ((ChatterInternalFrame)(desktopPane.getSelectedFrame())).getTarget();
        } catch (NullPointerException e) {}
        if (target != null && target.length() > 0)
            chatHandler.requestUserInfo(target);
    }//GEN-LAST:event_userInfoButtonActionPerformed

    private void closeWindow(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeWindow
        closeFrame(null);
    }//GEN-LAST:event_closeWindow

    private void createChat(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createChat
        String name = JOptionPane.showInputDialog(this, chatHandler.getIGSPlayerResources().getString("Enter_name"));
        if (name != null && name.length() > 0) {
            chatHandler.addChat(name);
            setInputFocus();
        }
    }//GEN-LAST:event_createChat

    private void closeFrame(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFrame
        setVisible(false);
    }//GEN-LAST:event_closeFrame

    public void addChat(ChatterInternalFrame c) {
        ChatterInternalFrame oldFocus = (ChatterInternalFrame)(desktopPane.getSelectedFrame());

        desktopPane.add(c, JLayeredPane.DEFAULT_LAYER);
        c.setVisible(true);
        c.moveToFront();

        if (oldFocus != null)
            oldFocus.setInputFocus();
    }

    public int getFontSize() {
        return fontSize;
    }

    public void changeFontSize() {
        try {
            JInternalFrame[] frames = desktopPane.getAllFramesInLayer(JLayeredPane.DEFAULT_LAYER.intValue());
            for (int i=0, sz=frames.length; i<sz; i++) {
                ((ChatterInternalFrame)frames[i]).changeFontSize();
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            System.err.println("Failed to change font size: " + e);
        }
    }

    public JButton getCloseButton() {
        return closeButton;
    }

    public JMenuItem getCloseMenuItem() {
        return closeMenuItem;
    }

    public void setInputFocus() {
        try {
            ((ChatterInternalFrame)(desktopPane.getSelectedFrame())).setInputFocus();
        } catch (NullPointerException e) {}
    }

    public void checkVisible() {
        if (!isVisible())
            setVisible(true);
        if (getState() != Frame.NORMAL)
            setState(Frame.NORMAL);
        // toFront();
        try {
            chatHandler.getToggleButton().setSelected(true);
        } catch (NullPointerException e) {}
    }

    public boolean getPlaySound() {
        return playSound;
    }

    public void updateLookAndFeel() {
        SwingUtilities.updateComponentTreeUI(this);
        pack();
        setSize(new java.awt.Dimension(550, 450));

        try {
            JInternalFrame[] frames = desktopPane.getAllFramesInLayer(JLayeredPane.DEFAULT_LAYER.intValue());
            for (int i=0, sz=frames.length; i<sz; i++) {
                SwingUtilities.updateComponentTreeUI((ChatterInternalFrame)frames[i]);
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            System.err.println("Failed to change font size: " + e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButtonMenuItem fontSize8Item;
    private javax.swing.JCheckBoxMenuItem playSoundMenuItem;
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.ButtonGroup fontSizeButtonGroup;
    private javax.swing.JToolBar toolBar;
    private javax.swing.JCheckBoxMenuItem viewToolbar;
    private javax.swing.JToggleButton soundToggleButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JRadioButtonMenuItem fontSize16Item;
    private javax.swing.JRadioButtonMenuItem fontSize14Item;
    private javax.swing.JRadioButtonMenuItem fontSize12Item;
    private javax.swing.JRadioButtonMenuItem fontSize10Item;
    // End of variables declaration//GEN-END:variables
}
