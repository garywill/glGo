/*
 * AutoawayDialog.java
 *
 *  gGo
 *  Copyright (C) 2002  Peter Strempel <pstrempel@t-online.de>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
package ggo.igs.gui;

import ggo.gGo;
import ggo.utils.*;
import java.awt.event.*;
import java.util.ResourceBundle;

/**
 * Dialog for IGS autoaway delay and message settings.
 *
 * @author  Peter Strempel
 * @version $Revision: 1.3 $, $Date: 2002/09/21 12:39:56 $
 */
public class AutoawayDialog extends javax.swing.JDialog {
    private KeyHandler keyHandler;
    private static ResourceBundle igs_resources;

    static {
        igs_resources = gGo.getIGSResources();
    }

    /** Creates new form AutoawayDialog */
    public AutoawayDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        keyHandler = new KeyHandler();
        initComponents();
        initSettings();
        setLocationRelativeTo(parent);
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;
        javax.swing.JPanel buttonPanel;
        javax.swing.JLabel delayLabel;
        javax.swing.JButton okButton;
        javax.swing.JLabel messageLabel;
        javax.swing.JLabel minsLabel;
        javax.swing.JButton cancelButton;
        javax.swing.JPanel mainPanel;

        mainPanel = new javax.swing.JPanel();
        delayLabel = new javax.swing.JLabel();
        delayTextField = new javax.swing.JTextField();
        messageLabel = new javax.swing.JLabel();
        messageTextField = new javax.swing.JTextField();
        minsLabel = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setTitle(igs_resources.getString("Autoaway_settings"));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        mainPanel.setLayout(new java.awt.GridBagLayout());

        mainPanel.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        delayLabel.setText(igs_resources.getString("autoaway_delay:"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(delayLabel, gridBagConstraints);

        delayTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        delayTextField.setText("10");
        delayTextField.setToolTipText(igs_resources.getString("autoaway_delay_tooltip"));
        delayTextField.setPreferredSize(new java.awt.Dimension(30, 26));
        delayTextField.addKeyListener(keyHandler);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(delayTextField, gridBagConstraints);

        messageLabel.setText(igs_resources.getString("autoaway_message:"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(messageLabel, gridBagConstraints);

        messageTextField.setText(igs_resources.getString("autoaway_default_message"));
        messageTextField.setToolTipText(igs_resources.getString("autoaway_message_tooltip"));
        messageTextField.setPreferredSize(new java.awt.Dimension(200, 26));
        messageTextField.addKeyListener(keyHandler);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(messageTextField, gridBagConstraints);

        minsLabel.setText(igs_resources.getString("minutes"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        mainPanel.add(minsLabel, gridBagConstraints);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        okButton.setText(igs_resources.getString("Ok"));
        getRootPane().setDefaultButton(okButton);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(okButton);

        cancelButton.setText(igs_resources.getString("Cancel"));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        closeDialog(null);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        acceptSettings();
        closeDialog(null);
    }//GEN-LAST:event_okButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void initSettings() {
        int delay = gGo.getSettings().getAutoawayTime();
        if (delay == -1)
            delay = 10;
        delayTextField.setText(String.valueOf(delay));

        String msg = gGo.getSettings().getAutoawayMessage();
        if (msg == null || msg.length() == 0)
            msg = igs_resources.getString("autoaway_default_message");
        messageTextField.setText(msg);
    }

    private void acceptSettings() {
        gGo.getSettings().setAutoawayTime(Utils.convertStringToInt(delayTextField.getText()));
        gGo.getSettings().setAutoawayMessage(messageTextField.getText());
        gGo.getSettings().saveSettings();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField delayTextField;
    private javax.swing.JTextField messageTextField;
    // End of variables declaration//GEN-END:variables

    class KeyHandler extends KeyAdapter {
        public void keyPressed(KeyEvent e) {
            if (e.getKeyCode() == KeyEvent.VK_ESCAPE)
                setVisible(false);
        }
    }
}
