/*
 * StartUpFrame.java
 *
 *  gGo
 *  Copyright (C) 2002  Peter Strempel <pstrempel@t-online.de>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
package ggo;

import ggo.*;
import ggo.utils.*;
import ggo.gui.gGoMetalTheme;
import ggo.dialogs.PreferencesDialog;
import javax.swing.*;
import javax.swing.plaf.metal.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ResourceBundle;

/**
 *  Frame shown on normal gGo startup (unless no parameters like -edit, -gtp or -igs given)
 *
 *@author     Peter Strempel
 *@version    $Revision: 1.15 $, $Date: 2002/10/17 19:04:56 $
 */
public class StartUpFrame extends JFrame implements Defines {
    private ResourceBundle ggo_resources;

    public StartUpFrame() {
        super(PACKAGE + " " + VERSION);
        setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        ggo_resources = gGo.getgGoResources();
        initComponents();

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation((screenSize.width - getWidth()) / 2, (screenSize.height - getHeight()) / 2);

        // Create an icon for the appliction
        Image icon = ImageHandler.getgGoImage();
        try {
            setIconImage(icon);
        } catch (NullPointerException e) {
            System.err.println("Failed to load icon image.");
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        javax.swing.JButton openButton;
        java.awt.GridBagConstraints gridBagConstraints;
        javax.swing.JLabel gnugoLabel;
        javax.swing.JPanel logoPanel;
        javax.swing.JButton configureButton;
        javax.swing.JLabel quitLabel;
        javax.swing.JButton loadButton;
        javax.swing.JLabel iconLabel;
        javax.swing.JLabel ggoLabel;
        javax.swing.JButton quitButton;
        javax.swing.JLabel connectLabel;
        javax.swing.JLabel loadLabel;
        javax.swing.JPanel buttonPanel;
        javax.swing.JLabel openLabel;
        javax.swing.JButton gnugoButton;
        javax.swing.JLabel configureLabel;
        javax.swing.JButton connectButton;

        logoPanel = new javax.swing.JPanel();
        iconLabel = new javax.swing.JLabel();
        ggoLabel = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        connectLabel = new javax.swing.JLabel();
        connectButton = new javax.swing.JButton();
        openLabel = new javax.swing.JLabel();
        openButton = new javax.swing.JButton();
        loadLabel = new javax.swing.JLabel();
        loadButton = new javax.swing.JButton();
        gnugoLabel = new javax.swing.JLabel();
        gnugoButton = new javax.swing.JButton();
        configureLabel = new javax.swing.JLabel();
        configureButton = new javax.swing.JButton();
        quitLabel = new javax.swing.JLabel();
        quitButton = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        logoPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 5));

        logoPanel.setBackground(new java.awt.Color(239, 231, 141));
        iconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ggo_big.png")));
        logoPanel.add(iconLabel);

        ggoLabel.setFont(new java.awt.Font("Dialog", 0, 18));
        ggoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ggoLabel.setText(PACKAGE + " " + VERSION);
        logoPanel.add(ggoLabel);

        getContentPane().add(logoPanel, java.awt.BorderLayout.NORTH);

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        buttonPanel.setBackground(new java.awt.Color(239, 231, 141));
        buttonPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 10, 10, 10)));
        connectLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/100purple.png")));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        buttonPanel.add(connectLabel, gridBagConstraints);

        connectButton.setBackground(new java.awt.Color(224, 213, 132));
        connectButton.setText(ggo_resources.getString("connect_igs"));
        connectButton.setToolTipText(ggo_resources.getString("connect_igs_tooltip"));
        connectButton.setPreferredSize(new java.awt.Dimension(120, 25));
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 3);
        buttonPanel.add(connectButton, gridBagConstraints);

        openLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/100navy.png")));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
        buttonPanel.add(openLabel, gridBagConstraints);

        openButton.setBackground(new java.awt.Color(224, 213, 132));
        openButton.setText(ggo_resources.getString("open_board_button"));
        openButton.setToolTipText(ggo_resources.getString("open_board_button_tooltip"));
        openButton.setPreferredSize(new java.awt.Dimension(120, 25));
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 3);
        buttonPanel.add(openButton, gridBagConstraints);

        loadLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/100emerald.png")));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        buttonPanel.add(loadLabel, gridBagConstraints);

        loadButton.setBackground(new java.awt.Color(224, 213, 132));
        loadButton.setText(ggo_resources.getString("load_game"));
        loadButton.setToolTipText(ggo_resources.getString("load_game_tooltip"));
        loadButton.setPreferredSize(new java.awt.Dimension(120, 25));
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        buttonPanel.add(loadButton, gridBagConstraints);

        gnugoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/100red.png")));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 0, 3);
        buttonPanel.add(gnugoLabel, gridBagConstraints);

        gnugoButton.setBackground(new java.awt.Color(224, 213, 132));
        gnugoButton.setText(ggo_resources.getString("play_gnugo"));
        gnugoButton.setToolTipText(ggo_resources.getString("play_gnugo_tooltip"));
        gnugoButton.setPreferredSize(new java.awt.Dimension(120, 25));
        gnugoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gnugoButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 3);
        buttonPanel.add(gnugoButton, gridBagConstraints);

        configureLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/100blue.png")));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 3, 0, 3);
        buttonPanel.add(configureLabel, gridBagConstraints);

        configureButton.setBackground(new java.awt.Color(224, 213, 132));
        configureButton.setText(ggo_resources.getString("preferences"));
        configureButton.setToolTipText(ggo_resources.getString("preferences_tooltip"));
        configureButton.setPreferredSize(new java.awt.Dimension(120, 25));
        configureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configureButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 3);
        buttonPanel.add(configureButton, gridBagConstraints);

        quitLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/100yellow.png")));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 3, 0, 0);
        buttonPanel.add(quitLabel, gridBagConstraints);

        quitButton.setBackground(new java.awt.Color(224, 213, 132));
        quitButton.setText(ggo_resources.getString("quit"));
        quitButton.setToolTipText(ggo_resources.getString("quit_tooltip"));
        quitButton.setPreferredSize(new java.awt.Dimension(120, 25));
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        buttonPanel.add(quitButton, gridBagConstraints);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void configureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configureButtonActionPerformed
        int oldlnf = gGo.getSettings().getLookAndFeel();
        String oldTheme = gGo.getSettings().getThemePack();
        PreferencesDialog dlg = new PreferencesDialog(this, true, gGo.getSettings());
        if (dlg.getResult()) {
            if (oldlnf != gGo.getSettings().getLookAndFeel() ||
            !oldTheme.equals(gGo.getSettings().getThemePack()))
                changeLookAndFeel(oldlnf, oldTheme);
            gGo.getSettings().saveSettings();
        }
    }//GEN-LAST:event_configureButtonActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        final JFileChooser fc = new JFileChooser(gGo.getSettings().getRemDir());
        // Looks strange, but the SGF filter should be first and selected
        SGFFileFilter sgf_filter = new SGFFileFilter();
        fc.addChoosableFileFilter(sgf_filter);
        fc.addChoosableFileFilter(new XMLFileFilter());
        fc.addChoosableFileFilter(new UGFFileFilter());
        fc.addChoosableFileFilter(new gGoFileFilter());
        fc.setFileFilter(sgf_filter);
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            gGo.openNewMainFrame(fc.getSelectedFile().getAbsolutePath(), true);
            gGo.getSettings().setRemDir(fc.getSelectedFile().getParent());
        }
    }//GEN-LAST:event_loadButtonActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        exitForm(null);
    }//GEN-LAST:event_quitButtonActionPerformed

    private void gnugoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gnugoButtonActionPerformed
        gGo.openGTPWindow(this);
    }//GEN-LAST:event_gnugoButtonActionPerformed

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        gGo.openIGSWindow();
    }//GEN-LAST:event_connectButtonActionPerformed

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        gGo.openNewMainFrame();
    }//GEN-LAST:event_openButtonActionPerformed

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        if (gGo.hasIGSConnection()) {
            if (JOptionPane.showConfirmDialog(
            this,
            gGo.getBoardResources().getString("ask_exit"),
            PACKAGE,
            JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION)
                return;
        }
        else if (gGo.hasModifiedBoards()) {
            if (JOptionPane.showConfirmDialog(
            this,
            gGo.getBoardResources().getString("warn_exit"),
            PACKAGE,
            JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION)
                return;
        }
        gGo.exitApp(0);
    }//GEN-LAST:event_exitForm

    private void changeLookAndFeel(int oldlnf, String oldTheme) {
        String lnfName = gGo.convertLookAndFeel(gGo.getSettings().getLookAndFeel());

        System.err.println("Trying to set LookAndFeel to: " + lnfName);

        try {
            if (gGo.getSettings().getLookAndFeel() == LOOKANDFEEL_SKIN) {
                if (!gGo.setTheme(gGo.getSettings().getThemePack()))
                    return;
            }

            if (oldlnf != gGo.getSettings().getLookAndFeel()) {
                // Apply own theme to Metal look and feel
                if (lnfName.equals("javax.swing.plaf.metal.MetalLookAndFeel"))
                    MetalLookAndFeel.setCurrentTheme(new gGoMetalTheme());
                LookAndFeel lf = (LookAndFeel)(gGo.class.getClassLoader().loadClass(lnfName).newInstance());
                UIManager.setLookAndFeel(lf);
                UIManager.getLookAndFeelDefaults().put("ClassLoader", gGo.class.getClassLoader());
            }

            // Quick and ugly... TODO
            if (UIManager.getLookAndFeel().getClass().getName().equals("com.sun.java.swing.plaf.windows.WindowsLookAndFeel") &&
                    gGo.getSettings().getFixWindowsFont()) {
                java.awt.Font f = new java.awt.Font("SansSerif", java.awt.Font.PLAIN, 12);
                java.util.Enumeration keys = UIManager.getDefaults().keys();
                while (keys.hasMoreElements()) {
                    Object key = keys.nextElement();
                    Object value = UIManager.get(key);
                    if (value instanceof javax.swing.plaf.FontUIResource)
                        UIManager.put(key, f);
                }
                System.err.println("Japanese locale with Windows look and feel detected, Windows fonts adjusted");
            }

            SwingUtilities.invokeLater(
                new Runnable() {
                    public void run() {
                        SwingUtilities.updateComponentTreeUI(StartUpFrame.this);
                        pack();
                    }
                });
        } catch (Exception e) {
            System.err.println("Failed to set LookAndFeel '" + lnfName + "': " + e);
            gGo.getSettings().setLookAndFeel(oldlnf);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
