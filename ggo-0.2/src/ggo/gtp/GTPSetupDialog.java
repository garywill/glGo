/*
 * GTPSetupDialog.java
 *
 *  gGo
 *  Copyright (C) 2002  Peter Strempel <pstrempel@t-online.de>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package ggo.gtp;

import ggo.gGo;
import ggo.utils.*;
import ggo.gtp.GTPConfig;
import java.awt.*;
import javax.swing.*;
import java.util.ResourceBundle;
import java.text.NumberFormat;

/**
 *  Dialog to configure the GTP setup. Boardsize, Handicap, Komi, Time, GnuGo level, etc.
 *
 *@author  Peter Strempel
 *@version $Revision: 1.4 $, $Date: 2002/09/21 12:39:55 $
 */
public class GTPSetupDialog extends javax.swing.JDialog {
    private boolean result = false;
    private GTPConfig gtpConfig;
    private ResourceBundle gtp_resources;

    /** Creates new form GTPSetupDialog */
    public GTPSetupDialog(java.awt.Frame parent, GTPConfig gtpConfig) {
        super(parent, true);
        this.gtpConfig = gtpConfig;

        gtp_resources = gGo.getGTPResources();
        initComponents();
        initSettings();
        gtpConfig.setResumeFileName(null);

        if (parent != null)
            setLocationRelativeTo(parent);
        else {
            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            setLocation((screenSize.width - getWidth()) / 2, (screenSize.height - getHeight()) / 2);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        javax.swing.JButton resumeButton;
        javax.swing.JLabel rulesLabel;
        javax.swing.JPanel aiPanel;
        javax.swing.JLabel timeSystemLabel;
        javax.swing.JLabel blackLabel;
        java.awt.GridBagConstraints gridBagConstraints;
        javax.swing.JLabel sizeLabel;
        javax.swing.JPanel buttonPanel;
        javax.swing.JButton okButton;
        javax.swing.JLabel mainTimeLabel;
        javax.swing.JLabel byoyomiLabel;
        javax.swing.JLabel stonesLabel;
        javax.swing.JPanel settingsPanel;
        javax.swing.JLabel handicapLabel;
        javax.swing.JLabel komiLabel;
        javax.swing.JLabel levelLabel;
        javax.swing.JLabel pathLabel;
        javax.swing.JPanel gnugoPanel;
        javax.swing.JButton cancelButton;
        javax.swing.JLabel whiteLabel;
        javax.swing.JPanel mainPanel;

        mainPanel = new javax.swing.JPanel();
        aiPanel = new javax.swing.JPanel();
        whiteLabel = new javax.swing.JLabel();
        whiteComboBox = new javax.swing.JComboBox();
        blackLabel = new javax.swing.JLabel();
        blackComboBox = new javax.swing.JComboBox();
        settingsPanel = new javax.swing.JPanel();
        rulesLabel = new javax.swing.JLabel();
        rulesComboBox = new javax.swing.JComboBox();
        sizeLabel = new javax.swing.JLabel();
        sizeTextField = new javax.swing.JTextField();
        handicapLabel = new javax.swing.JLabel();
        handicapTextField = new javax.swing.JTextField();
        komiLabel = new javax.swing.JLabel();
        komiTextField = new javax.swing.JTextField();
        timeSystemLabel = new javax.swing.JLabel();
        timeSystemComboBox = new javax.swing.JComboBox();
        mainTimeLabel = new javax.swing.JLabel();
        mainTimeTextField = new javax.swing.JTextField();
        byoyomiLabel = new javax.swing.JLabel();
        byoyomiTextField = new javax.swing.JTextField();
        stonesLabel = new javax.swing.JLabel();
        stonesTextField = new javax.swing.JTextField();
        gnugoPanel = new javax.swing.JPanel();
        levelLabel = new javax.swing.JLabel();
        levelTextField = new javax.swing.JTextField();
        pathLabel = new javax.swing.JLabel();
        pathTextField = new javax.swing.JTextField();
        buttonPanel = new javax.swing.JPanel();
        resumeButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setTitle(gtp_resources.getString("gnugo_setup_title"));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.Y_AXIS));

        mainPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(3, 3, 1, 3)));
        aiPanel.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(3, 3, 3, 3)), new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED)));
        whiteLabel.setText(gtp_resources.getString("White:"));
        aiPanel.add(whiteLabel);

        whiteComboBox.setModel(getComputerHumanModel());
        aiPanel.add(whiteComboBox);

        blackLabel.setText(gtp_resources.getString("Black:"));
        aiPanel.add(blackLabel);

        blackComboBox.setModel(getComputerHumanModel());
        aiPanel.add(blackComboBox);

        mainPanel.add(aiPanel);

        settingsPanel.setLayout(new java.awt.GridBagLayout());

        settingsPanel.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(3, 3, 3, 3)), new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED)));
        rulesLabel.setText(gtp_resources.getString("Rules:"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(rulesLabel, gridBagConstraints);

        rulesComboBox.setModel(getRulesModel());
        rulesComboBox.setToolTipText(gtp_resources.getString("rules_tooltip"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(rulesComboBox, gridBagConstraints);

        sizeLabel.setText(gtp_resources.getString("Size:"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(sizeLabel, gridBagConstraints);

        sizeTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        sizeTextField.setText("19");
        sizeTextField.setToolTipText(gtp_resources.getString("size_tooltip"));
        sizeTextField.setPreferredSize(new java.awt.Dimension(50, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(sizeTextField, gridBagConstraints);

        handicapLabel.setText(gtp_resources.getString("Handicap:"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(handicapLabel, gridBagConstraints);

        handicapTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        handicapTextField.setText("0");
        handicapTextField.setToolTipText(gtp_resources.getString("handicap_tooltip"));
        handicapTextField.setPreferredSize(new java.awt.Dimension(50, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(handicapTextField, gridBagConstraints);

        komiLabel.setText(gtp_resources.getString("Komi:"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(komiLabel, gridBagConstraints);

        komiTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        komiTextField.setText("5.5");
        komiTextField.setToolTipText(gtp_resources.getString("komi_tooltip"));
        komiTextField.setPreferredSize(new java.awt.Dimension(50, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(komiTextField, gridBagConstraints);

        timeSystemLabel.setText(gtp_resources.getString("Time_system:"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(timeSystemLabel, gridBagConstraints);

        timeSystemComboBox.setModel(getTimeSystemModel());
        timeSystemComboBox.setToolTipText(gtp_resources.getString("time_system_tooltip"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(timeSystemComboBox, gridBagConstraints);

        mainTimeLabel.setText(gtp_resources.getString("Main_time:"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(mainTimeLabel, gridBagConstraints);

        mainTimeTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        mainTimeTextField.setText("30");
        mainTimeTextField.setToolTipText(gtp_resources.getString("main_time_tooltip"));
        mainTimeTextField.setPreferredSize(new java.awt.Dimension(50, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(mainTimeTextField, gridBagConstraints);

        byoyomiLabel.setText(gtp_resources.getString("Byoyomi_time:"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(byoyomiLabel, gridBagConstraints);

        byoyomiTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        byoyomiTextField.setText("10");
        byoyomiTextField.setToolTipText(gtp_resources.getString("byoyomi_time_tooltip"));
        byoyomiTextField.setPreferredSize(new java.awt.Dimension(50, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(byoyomiTextField, gridBagConstraints);

        stonesLabel.setText(gtp_resources.getString("Stones:"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(stonesLabel, gridBagConstraints);

        stonesTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        stonesTextField.setText("25");
        stonesTextField.setToolTipText(gtp_resources.getString("stones_tooltip"));
        stonesTextField.setPreferredSize(new java.awt.Dimension(50, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        settingsPanel.add(stonesTextField, gridBagConstraints);

        mainPanel.add(settingsPanel);

        gnugoPanel.setLayout(new java.awt.GridBagLayout());

        gnugoPanel.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(3, 3, 3, 3)), new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED)));
        levelLabel.setText(gtp_resources.getString("GnuGo_Level:"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        gnugoPanel.add(levelLabel, gridBagConstraints);

        levelTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        levelTextField.setText("10");
        levelTextField.setToolTipText(gtp_resources.getString("gnugo_level_tooltip"));
        levelTextField.setPreferredSize(new java.awt.Dimension(50, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        gnugoPanel.add(levelTextField, gridBagConstraints);

        pathLabel.setText(gtp_resources.getString("GnuGo_path:"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        gnugoPanel.add(pathLabel, gridBagConstraints);

        pathTextField.setText("gnugo");
        pathTextField.setToolTipText(gtp_resources.getString("gnugo_path_tooltip"));
        pathTextField.setPreferredSize(new java.awt.Dimension(140, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        gnugoPanel.add(pathTextField, gridBagConstraints);

        mainPanel.add(gnugoPanel);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        buttonPanel.setLayout(new javax.swing.BoxLayout(buttonPanel, javax.swing.BoxLayout.X_AXIS));

        resumeButton.setText(gtp_resources.getString("resume_game"));
        resumeButton.setToolTipText(gtp_resources.getString("resume_game_tooltip"));
        resumeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resumeButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(resumeButton);

        buttonPanel.add(Box.createHorizontalGlue());
        okButton.setText(gtp_resources.getString("Ok"));
        getRootPane().setDefaultButton(okButton);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(okButton);

        cancelButton.setText(gtp_resources.getString("Cancel"));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents

    private void resumeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resumeButtonActionPerformed
        final JFileChooser fc = new JFileChooser(gGo.getSettings().getRemDir());
        fc.addChoosableFileFilter(new SGFFileFilter());
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            gtpConfig.setResumeFileName(fc.getSelectedFile().getAbsolutePath());
            result = true;
            acceptSettings();
            closeDialog(null);
        }
    }//GEN-LAST:event_resumeButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        result = false;
        closeDialog(null);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        result = true;
        acceptSettings();
        closeDialog(null);
    }//GEN-LAST:event_okButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    public boolean getResult() {
        return result;
    }

    public GTPConfig getGTPConfig() {
        return gtpConfig;
    }

    private void initSettings() {
        sizeTextField.setText(String.valueOf(gtpConfig.getSize()));
        blackComboBox.setSelectedIndex(gtpConfig.getBlack());
        whiteComboBox.setSelectedIndex(gtpConfig.getWhite());
        handicapTextField.setText(String.valueOf(gtpConfig.getHandicap()));
        komiTextField.setText(String.valueOf(gtpConfig.getKomi()));
        // komiTextField.setText(NumberFormat.getNumberInstance(gGo.getLocale()).format(gtpConfig.getKomi()));
        mainTimeTextField.setText(String.valueOf(gtpConfig.getMainTime() / 60));
        byoyomiTextField.setText(String.valueOf(gtpConfig.getByoYomiTime() / 60));
        stonesTextField.setText(String.valueOf(gtpConfig.getByoYomiStones()));
        levelTextField.setText(String.valueOf(gtpConfig.getLevel()));
        pathTextField.setText(gGo.getSettings().getGnugoPath());
    }

    private void acceptSettings() {
        gtpConfig.setSize(Utils.convertStringToInt(sizeTextField.getText()));
        gtpConfig.setBlack(blackComboBox.getSelectedIndex());
        gtpConfig.setWhite(whiteComboBox.getSelectedIndex());
        gtpConfig.setHandicap(Utils.convertStringToInt(handicapTextField.getText()));
        gtpConfig.setKomi(Utils.convertStringToFloat(komiTextField.getText()));
        gtpConfig.setMainTime(Utils.convertStringToInt(mainTimeTextField.getText()) * 60);
        gtpConfig.setByoYomiTime(Utils.convertStringToInt(byoyomiTextField.getText()) * 60);
        gtpConfig.setByoYomiStones(Utils.convertStringToInt(stonesTextField.getText()));
        gtpConfig.setLevel(Utils.convertStringToInt(levelTextField.getText()));
        gGo.getSettings().setGnugoPath(pathTextField.getText());
        gGo.getSettings().setGTPConfig(gtpConfig);
        gGo.getSettings().saveSettings();
    }

    private DefaultComboBoxModel getComputerHumanModel() {
        return new DefaultComboBoxModel(new String[] { gtp_resources.getString("Human"), gtp_resources.getString("Computer") });
    }

    private DefaultComboBoxModel getRulesModel() {
        return new DefaultComboBoxModel(new String[] { gtp_resources.getString("Japanese") });
    }

    private DefaultComboBoxModel getTimeSystemModel() {
        return new DefaultComboBoxModel(new String[] { gtp_resources.getString("Canadian") });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField stonesTextField;
    private javax.swing.JComboBox blackComboBox;
    private javax.swing.JTextField handicapTextField;
    private javax.swing.JComboBox rulesComboBox;
    private javax.swing.JTextField komiTextField;
    private javax.swing.JTextField levelTextField;
    private javax.swing.JTextField pathTextField;
    private javax.swing.JComboBox whiteComboBox;
    private javax.swing.JComboBox timeSystemComboBox;
    private javax.swing.JTextField sizeTextField;
    private javax.swing.JTextField mainTimeTextField;
    private javax.swing.JTextField byoyomiTextField;
    // End of variables declaration//GEN-END:variables

}
